---
// import Picture from '../../components/core/Picture.astro'
import { Image } from '@astrojs/image/components'
import PostTags from '../../components/atoms/Tags.astro'
import Author from '../../components/atoms/Author.astro'
import { addBigLetterToBody } from '../../utils/addBigLetterToBody'

interface Props {
  post: BlogPost
}
import { getFormattedDate } from '../../utils/utils'
import type { BlogPost } from '../../utils/types'
import readingTime from 'reading-time'
import { Fragment } from 'react'

const { post } = Astro.props
const filteredBody = post.body.replace(/<\!--.*?-->/g, '').replace(/<p>&nbsp;<\/p>/g, '')
const bod = addBigLetterToBody(filteredBody)

const authors = [...(post.blog_authors ?? []), ...(post.team_members ?? [])]
---

<section class="py-8 sm:py-16 lg:py-20 mx-auto">
  <article class="grid grid-cols-12 w-full">
    <p class="col-span-8 col-start-3 max-w-3xl">
      <time datetime={post.publishDate ?? post.publishedAt}
        >{getFormattedDate(post.publishDate ?? post.publishedAt)}
      </time> ~ {Math.ceil(readingTime(post.body).minutes)} min read
    </p>
    <header class="col-span-8 col-start-3 my-2">
      <h1
        class="max-w-3xl text-4xl md:text-5xl font-bold leading-tighter tracking-tighter font-heading"
      >
        {post.title}
      </h1>
    </header>
    <div class="col-start-3 col-span-5 container mx-auto max-w-3xl mt-8">
      <PostTags tags={post.blog_tags ?? []} />
    </div>
    <div class="col-start-1 col-span-11">
      {
        (post.image.width || post.image.height) && (
          <Image
            src={post.image.url}
            class="mt-4 mb-6  w-full bg-gray-400 dark:bg-slate-700"
            height={post.image?.height}
            width={post.image?.width}
            format="webp"
            fit="cover"
            aspectRatio="21:9"
            alt={post.image.alt ?? post.seo?.metaDescription ?? post.excerpt}
          />
        )
      }
    </div>

    <p class="col-start-3 mt-8 text-lg col-span-9 flex gap-1">
      By
      {
        authors.map((author, idx) => (
          <span>
            <a href={`/${author.slug}`} class="font-bold text-gray-900 dark:text-gray-100">
              {author.firstName} {author.lastName}
            </a>
            {idx === authors.length - 1 ? '' : idx === authors.length - 2 ? ' & ' : ', '}
          </span>
        ))
      }
    </p>
    <div
      class="col-span-1 justify-self-center p-1 mt-8 sticky top-40 col-start-1 flex flex-col gap-4 h-4"
    >
      <span class="flex flex-col gap-6 text-4xl">
        <a
          href={`https://twitter.com/intent/tweet?text=${post.title}&url=https%3A%2F%2Fblog.trialanderror.orgs%2F${post.slug}`}
        >
          <svg class="h-8 w-8 text-gray-400" fill="currentColor" viewBox="0 0 24 24">
            <path
              d="M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84"
            ></path>
          </svg>
        </a>
        <a
          href={`http://www.facebook.com/sharer.php?u=https%3A%2F%2Fblog.trialanderror.org%2F${post.slug}`}
        >
          <svg class="h-8 w-8 text-gray-400" fill="currentColor" viewBox="0 0 24 24">
            <path
              fill-rule="evenodd"
              d="M22 12c0-5.523-4.477-10-10-10S2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.878v-6.987h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.988C18.343 21.128 22 16.991 22 12z"
              clip-rule="evenodd"></path>
          </svg>
        </a>
        <a
          href={`mailto:?subject=${post.title}&body=https%3A%2F%2Fblog.trialanderror.org%2F${post.slug}`}
        >
          <svg
            class="h-8 w-8 text-gray-400"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"
            ></path>
          </svg>
        </a>
      </span>
    </div>
    <div
      class="col-start-3 col-end-10 max-w-3xl prose-lg dark:prose-invert dark:prose-headings:text-slate-300 prose-md prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-primary-600 dark:prose-a:text-primary-400 prose-img:rounded-md prose-img:shadow-lg my-8"
    >
      <div class="first-of-type:prose-p:mt-0" set:html={bod}></div>
      <hr />
    </div>
    {authors.map((author) => <Author class="col-span-6 col-start-3" author={author} />)}
  </article>
</section>
