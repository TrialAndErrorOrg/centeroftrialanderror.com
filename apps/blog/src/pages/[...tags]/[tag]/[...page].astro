---
import { SITE, BLOG } from '../../../config.mjs'

import Layout from '../../../layouts/BlogLayout.astro'
import BlogList from '../../../components/blog/List.astro'
import Pagination from '../../../components/atoms/Pagination.astro'

import { getCanonical, getPermalink, cleanSlug, TAG_BASE } from '../../../utils/permalinks'
import type { GetStaticPaths } from 'astro'
import { getPosts } from '../../../utils/blog.js'
import PostCard from 'apps/blog/src/components/blog/PostCard.astro'

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  if (BLOG?.disabled || BLOG?.tag?.disabled) return []

  const posts = await getPosts()

  const tags = Object.fromEntries(
    posts.flatMap((post) => post.blog_tags).map((tag) => [tag?.title, tag?.slug])
  )

  return Object.entries(tags).map(([tag, slug]) => {
    return paginate(
      posts.filter((post) => post?.blog_tags?.find((bt) => bt.title === tag)),
      {
        params: { tag: slug || tag || '', tags: TAG_BASE || 'tag' },
        pageSize: BLOG.postsPerPage,
        tag,
        props: { tag: tag },
      }
    )
  })
}

const { page, tag } = Astro.props

const currentPage = page.currentPage ?? 1

const meta = {
  title: `Posts by tag '${tag}' ${currentPage > 1 ? `— Page ${currentPage} ` : ''}— ${SITE.name}`,
  description: SITE.description,
  canonical: getCanonical(getPermalink(page.url.current)),
  noindex: true,
}
---

<Layout meta={meta}>
  <Fragment slot="title">
    <span class="button text-xl px-4 py-1">{tag}</span>
  </Fragment>
  <!-- <BlogList posts={page.data} /> -->
  <div class="max-w-4xl flex font-normal flex-col gap-6 mx-auto">
    {page.data.map((post) => <PostCard wide post={post} />)}
  </div>
  <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
</Layout>
