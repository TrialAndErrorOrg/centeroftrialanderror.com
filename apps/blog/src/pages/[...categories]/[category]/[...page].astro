---
import { SITE, BLOG } from '../../../config.mjs'

import Layout from '../../../layouts/BlogLayout.astro'
import BlogList from '../../../components/blog/List.astro'
import Pagination from '../../../components/atoms/Pagination.astro'

import { getCanonical, getPermalink, cleanSlug, CATEGORY_BASE } from '../../../utils/permalinks'
import { getPosts } from '../../../utils/blog.js'
import type { GetStaticPaths } from 'astro'
import PostCard from '../../../components/blog/PostCard.astro'

const categoryColorMap = {
  interview: '!bg-rose-500',
  'behind the scenes': '!bg-emerald-400 ',
  opinion: '!bg-orange-100',
}
const darkCategoryColorMap = {
  interview: 'dark:!bg-rose-800',
  'behind the scenes': 'dark:!bg-emerald-700 ',
  opinion: 'dark:!bg-orange-800',
}

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  if (BLOG?.disabled || BLOG?.category?.disabled) return []

  const posts = await getPosts()

  const categories = new Set()
  posts.map((post) => {
    categories.add(post.category?.title?.toLowerCase())
  })

  return Array.from(categories).map((category) =>
    paginate(
      posts.filter((post) => category === post.category?.title?.toLowerCase()),
      {
        params: { category: cleanSlug(category ?? ''), categories: CATEGORY_BASE || undefined },
        pageSize: BLOG.postsPerPage,
        props: { category },
      }
    )
  )
}

const { page, category } = Astro.props

const currentPage = page.currentPage ?? 1

const meta = {
  title: `Category '${category}' ${currentPage > 1 ? `— Page ${currentPage} ` : ''}— ${SITE.name}`,
  description: SITE.description,
  canonical: getCanonical(getPermalink(page.url.current)),
  noindex: true,
}
---

<Layout meta={meta}>
  <Fragment slot="title">
    <span
      class={`button text-3xl !border-2 font-medium px-4 py-1 rounded-full ${categoryColorMap[category]} ${darkCategoryColorMap[category]}`}
      >{category}</span
    >
  </Fragment>
  <div class="max-w-4xl flex-col flex gap-6 mx-auto">
    {page.data.map((post) => <PostCard wide post={post} />)}
  </div>
  <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
</Layout>
