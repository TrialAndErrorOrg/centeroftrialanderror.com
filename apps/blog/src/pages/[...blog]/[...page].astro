---
import { SITE, BLOG } from '../../config.mjs'

import Layout from '../../layouts/BlogLayout.astro'
import BlogList from '../../components/blog/List.astro'
import Pagination from '../../components/atoms/Pagination.astro'

import { fetchPosts } from '../../utils/posts'
import { getCanonical, getPermalink, BLOG_BASE } from '../../utils/permalinks'
import { getPosts } from '../../utils/blog.js'
import type { GetStaticPaths } from 'astro'
import type { BlogPost } from '@/types'
import PostCard from '../../components/blog/PostCard.astro'

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  if (BLOG?.disabled || BLOG?.blog?.disabled) return []

  const posts = await getPosts()

  return paginate(posts, {
    params: { blog: BLOG_BASE || undefined },
    pageSize: BLOG.postsPerPage,
  })
}

interface Props {
  page: {
    data: BlogPost[]
    currentPage: number
    url: {
      current: string
      next: string
      prev: string
    }
  }
}

const { page } = Astro.props
const currentPage = page.currentPage ?? 1

const meta = {
  title: `Blog ${currentPage > 1 ? `— Page ${currentPage} ` : ''}— ${SITE.name}`,
  description: SITE.description,
  canonical: getCanonical(getPermalink(page.url.current)),
  ogType: 'blog',
  noindex: currentPage > 1,
}
---

<Layout {meta}>
  <Fragment slot="title">
    <span class="bg-clip-text text-transparent bg-gradient-to-r from-primary-500 to-orange-500"
      >Trial & Error</span
    >
  </Fragment>
  <!-- <BlogList posts={page.data} /> -->
  <div class="flex-col flex gap-6 w-[80vw] items-center mx-auto">
    {page.data.map((post) => <PostCard post={post} wide />)}
  </div>
  <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
</Layout>
