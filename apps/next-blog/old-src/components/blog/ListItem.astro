---
// import Picture from '../../components/core/Picture.astro'
import { Image, Picture } from '@astrojs/image/components'
import PostTags from '../../components/atoms/Tags.astro'

import { getPermalink } from '../../utils/permalinks'
import { getFormattedDate } from '../../utils/utils'
import type { BlogPost } from '../../utils/types'
import readingTime from 'reading-time'

const { post } = Astro.props as { post: BlogPost }

// const image = await findImage(post.image)
const image = post.image
---

<article className="max-w-md mx-auto md:max-w-none grid md:grid-cols-2 gap-6 md:gap-8">
  <a className="relative block group" href={getPermalink(post.slug, 'post')}>
    <div
      className="relative h-0 pb-[56.25%] md:pb-[75%] md:h-80 lg:pb-[56.25%] overflow-hidden bg-gray-400 dark:bg-slate-700 rounded shadow-lg"
    >
      <Image
        src={image?.formats?.small?.url ?? image?.url}
        className="absolute inset-0 object-cover w-full h-full mb-6 rounded shadow-lg bg-gray-400 dark:bg-slate-700"
        fit="cover"
        width={image?.formats?.small?.width ?? image?.width}
        alt={image.alt ?? post.title}
        aspectRatio="1:1"
      />
    </div>
  </a>
  <div>
    <header>
      <h2 className="text-xl sm:text-2xl font-bold leading-snug mb-2 font-heading">
        <a
          className="hover:text-primary-600 underline underline-offset-4 decoration-1 decoration-dotted transition ease-in duration-200"
          href={getPermalink(post.slug, 'post')}
        >
          {post.title}
        </a>
      </h2>
    </header>
    <p className="text-sm sm:text-sm flex-grow">
      {post.excerpt}
    </p>
    <footer className="mt-4">
      <div>
        <span className="text-gray-500 dark:text-slate-400">
          <time datetime={post.publishDate ?? post.publishedAt}
            >{getFormattedDate(post.publishDate ?? post.publishedAt)}</time
          > ~
          {Math.ceil(readingTime(post.body).minutes)} min read
        </span>
      </div>
      <div className="mt-4">
        <PostTags tags={post.blog_tags ?? []} />
      </div>
      <div>
        {
          [...(post.blog_authors ?? []), ...(post.team_members ?? [])].map((author) => (
            <a
              className="hover:text-primary-600 text-gray-500 transition duration-200 ease-in dark:text-slate-400"
              href={getPermalink(author.slug, 'author')}
            >
              {author.firstName} {author.lastName}
            </a>
          ))
        }
      </div>
    </footer>
  </div>
</article>
