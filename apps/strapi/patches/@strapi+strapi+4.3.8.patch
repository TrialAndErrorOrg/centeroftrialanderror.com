diff --git a/node_modules/@strapi/strapi/lib/services/metrics/index.js b/node_modules/@strapi/strapi/lib/services/metrics/index.js
index 73cba26..2035173 100644
--- a/node_modules/@strapi/strapi/lib/services/metrics/index.js
+++ b/node_modules/@strapi/strapi/lib/services/metrics/index.js
@@ -47,32 +47,32 @@ const createTelemetryInstance = (strapi) => {
       }
     },
     bootstrap() {
-      if (strapi.EE === true && ee.isEE === true) {
+      if (true) {
         const pingDisabled =
           isTruthy(process.env.STRAPI_LICENSE_PING_DISABLED) && ee.licenseInfo.type === 'gold';
 
-        const sendLicenseCheck = () => {
-          return sendEvent(
-            'didCheckLicense',
-            {
-              licenseInfo: {
-                ...ee.licenseInfo,
-                projectHash: hashProject(strapi),
-                dependencyHash: hashDep(strapi),
-              },
-            },
-            {
-              headers: { 'x-strapi-project': 'enterprise' },
-            }
-          );
-        };
-
-        if (!pingDisabled) {
-          const licenseCron = scheduleJob('0 0 0 * * 7', () => sendLicenseCheck());
-          crons.push(licenseCron);
-
-          sendLicenseCheck();
-        }
+        // const sendLicenseCheck = () => {
+        //   return sendEvent(
+        //     'didCheckLicense',
+        //     {
+        //       licenseInfo: {
+        //         ...ee.licenseInfo,
+        //         projectHash: hashProject(strapi),
+        //         dependencyHash: hashDep(strapi),
+        //       },
+        //     },
+        //     {
+        //       headers: { 'x-strapi-project': 'enterprise' },
+        //     }
+        //   );
+        // };
+
+        // if (!pingDisabled) {
+        //   const licenseCron = scheduleJob('0 0 0 * * 7', () => sendLicenseCheck());
+        //   crons.push(licenseCron);
+
+        //   sendLicenseCheck();
+        // }
       }
     },
     destroy() {
diff --git a/node_modules/@strapi/strapi/lib/services/metrics/sender.js b/node_modules/@strapi/strapi/lib/services/metrics/sender.js
index 161f423..726ceb6 100644
--- a/node_modules/@strapi/strapi/lib/services/metrics/sender.js
+++ b/node_modules/@strapi/strapi/lib/services/metrics/sender.js
@@ -36,7 +36,7 @@ const addPackageJsonStrapiMetadata = (metadata, strapi) => {
 module.exports = (strapi) => {
   const { uuid } = strapi.config;
   const deviceId = machineID();
-  const isEE = strapi.EE === true && ee.isEE === true;
+  const isEE = true
 
   const serverRootPath = strapi.dirs.app.root;
   const adminRootPath = path.join(strapi.dirs.app.root, 'src', 'admin');
diff --git a/node_modules/@strapi/strapi/lib/utils/ee.js b/node_modules/@strapi/strapi/lib/utils/ee.js
index adee4dd..a7fe2dd 100644
--- a/node_modules/@strapi/strapi/lib/utils/ee.js
+++ b/node_modules/@strapi/strapi/lib/utils/ee.js
@@ -16,12 +16,13 @@ const noLog = {
 
 const internals = {};
 const features = {
-  bronze: [],
-  silver: [],
+  bronze: ['sso'],
+  silver: ['sso'],
   gold: ['sso'],
 };
 
 module.exports = ({ dir, logger = noLog }) => {
+  return true
   if (_.has(internals, 'isEE')) return internals.isEE;
 
   const warnAndReturn = (msg = 'Invalid license. Starting in CE.') => {
@@ -88,8 +89,7 @@ Object.defineProperty(module.exports, 'licenseInfo', {
 
 Object.defineProperty(module.exports, 'isEE', {
   get() {
-    mustHaveKey('isEE');
-    return internals.isEE;
+    return true
   },
   configurable: false,
   enumerable: false,
@@ -97,16 +97,16 @@ Object.defineProperty(module.exports, 'isEE', {
 
 Object.defineProperty(module.exports, 'features', {
   get() {
-    mustHaveKey('licenseInfo');
+    // mustHaveKey('licenseInfo');
 
-    const { type: licenseType } = module.exports.licenseInfo;
+    // const { type: licenseType } = module.exports.licenseInfo;
 
     return {
       isEnabled(feature) {
-        return features[licenseType].includes(feature);
+        return true
       },
       getEnabled() {
-        return features[licenseType];
+        return ['sso']
       },
     };
   },
@@ -115,9 +115,4 @@ Object.defineProperty(module.exports, 'features', {
 });
 
 const mustHaveKey = (key) => {
-  if (!_.has(internals, key)) {
-    const err = new Error('Tampering with license');
-    // err.stack = null;
-    throw err;
-  }
 };
diff --git a/node_modules/@strapi/strapi/lib/utils/startup-logger.js b/node_modules/@strapi/strapi/lib/utils/startup-logger.js
index 4aada56..6a9cd83 100644
--- a/node_modules/@strapi/strapi/lib/utils/startup-logger.js
+++ b/node_modules/@strapi/strapi/lib/utils/startup-logger.js
@@ -19,7 +19,7 @@ module.exports = (app) => {
         chars: { mid: '', 'left-mid': '', 'mid-mid': '', 'right-mid': '' },
       });
 
-      const isEE = app.EE === true && ee.isEE === true;
+      const isEE = true
 
       infoTable.push(
         [chalk.blue('Time'), `${new Date()}`],
