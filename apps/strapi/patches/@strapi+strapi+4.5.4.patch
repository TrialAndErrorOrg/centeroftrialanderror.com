diff --git a/node_modules/@strapi/strapi/lib/services/metrics/index.js b/node_modules/@strapi/strapi/lib/services/metrics/index.js
index 908f2c9..02543e2 100644
--- a/node_modules/@strapi/strapi/lib/services/metrics/index.js
+++ b/node_modules/@strapi/strapi/lib/services/metrics/index.js
@@ -27,7 +27,7 @@ const createTelemetryInstance = (strapi) => {
   const uuid = strapi.config.get('uuid');
   const telemetryDisabled = strapi.config.get('packageJsonStrapi.telemetryDisabled');
   const isDisabled =
-    !uuid || isTruthy(process.env.STRAPI_TELEMETRY_DISABLED) || isTruthy(telemetryDisabled);
+  true || !uuid || isTruthy(process.env.STRAPI_TELEMETRY_DISABLED) || isTruthy(telemetryDisabled);
 
   const crons = [];
   const sender = createSender(strapi);
@@ -47,35 +47,35 @@ const createTelemetryInstance = (strapi) => {
       }
     },
     bootstrap() {
-      if (strapi.EE === true && ee.isEE === true) {
-        const pingDisabled =
-          isTruthy(process.env.STRAPI_LICENSE_PING_DISABLED) && ee.licenseInfo.type === 'gold';
-
-        const sendLicenseCheck = () => {
-          return sendEvent(
-            'didCheckLicense',
-            {
-              groupProperties: {
-                licenseInfo: {
-                  ...ee.licenseInfo,
-                  projectHash: hashProject(strapi),
-                  dependencyHash: hashDep(strapi),
-                },
-              },
-            },
-            {
-              headers: { 'x-strapi-project': 'enterprise' },
-            }
-          );
-        };
-
-        if (!pingDisabled) {
-          const licenseCron = scheduleJob('0 0 0 * * 7', () => sendLicenseCheck());
-          crons.push(licenseCron);
-
-          sendLicenseCheck();
-        }
-      }
+      // if (true) {
+      //   const pingDisabled =
+      //     isTruthy(process.env.STRAPI_LICENSE_PING_DISABLED) && ee.licenseInfo.type === 'gold';
+
+      //   const sendLicenseCheck = () => {
+      //     return sendEvent(
+      //       'didCheckLicense',
+      //       {
+      //         groupProperties: {
+      //           licenseInfo: {
+      //             ...ee.licenseInfo,
+      //             projectHash: hashProject(strapi),
+      //             dependencyHash: hashDep(strapi),
+      //           },
+      //         },
+      //       },
+      //       {
+      //         headers: { 'x-strapi-project': 'enterprise' },
+      //       }
+      //     );
+      //   };
+
+      //   if (!pingDisabled) {
+      //     const licenseCron = scheduleJob('0 0 0 * * 7', () => sendLicenseCheck());
+      //     crons.push(licenseCron);
+
+      //     sendLicenseCheck();
+      //   }
+      // }
     },
     destroy() {
       // clear open handles
diff --git a/node_modules/@strapi/strapi/lib/services/metrics/sender.js b/node_modules/@strapi/strapi/lib/services/metrics/sender.js
index 13a2f50..ee09bea 100644
--- a/node_modules/@strapi/strapi/lib/services/metrics/sender.js
+++ b/node_modules/@strapi/strapi/lib/services/metrics/sender.js
@@ -84,8 +84,8 @@ module.exports = (strapi) => {
     };
 
     try {
-      const res = await fetch(`${ANALYTICS_URI}/api/v2/track`, reqParams);
-      return res.ok;
+      // const res = await fetch(`${ANALYTICS_URI}/api/v2/track`, reqParams);
+      return false
     } catch (err) {
       return false;
     }
diff --git a/node_modules/@strapi/strapi/lib/utils/ee.js b/node_modules/@strapi/strapi/lib/utils/ee.js
index adee4dd..a5ec94f 100644
--- a/node_modules/@strapi/strapi/lib/utils/ee.js
+++ b/node_modules/@strapi/strapi/lib/utils/ee.js
@@ -22,6 +22,7 @@ const features = {
 };
 
 module.exports = ({ dir, logger = noLog }) => {
+  return true
   if (_.has(internals, 'isEE')) return internals.isEE;
 
   const warnAndReturn = (msg = 'Invalid license. Starting in CE.') => {
@@ -79,7 +80,7 @@ module.exports = ({ dir, logger = noLog }) => {
 
 Object.defineProperty(module.exports, 'licenseInfo', {
   get() {
-    mustHaveKey('licenseInfo');
+    // mustHaveKey('licenseInfo');
     return internals.licenseInfo;
   },
   configurable: false,
@@ -88,8 +89,8 @@ Object.defineProperty(module.exports, 'licenseInfo', {
 
 Object.defineProperty(module.exports, 'isEE', {
   get() {
-    mustHaveKey('isEE');
-    return internals.isEE;
+    // mustHaveKey('isEE');
+    return true;
   },
   configurable: false,
   enumerable: false,
@@ -97,16 +98,16 @@ Object.defineProperty(module.exports, 'isEE', {
 
 Object.defineProperty(module.exports, 'features', {
   get() {
-    mustHaveKey('licenseInfo');
+    // mustHaveKey('licenseInfo');
 
-    const { type: licenseType } = module.exports.licenseInfo;
+    // const { type: licenseType } = module.exports.licenseInfo;
 
     return {
       isEnabled(feature) {
-        return features[licenseType].includes(feature);
+        return true
       },
       getEnabled() {
-        return features[licenseType];
+        return ['sso']
       },
     };
   },
@@ -115,9 +116,9 @@ Object.defineProperty(module.exports, 'features', {
 });
 
 const mustHaveKey = (key) => {
-  if (!_.has(internals, key)) {
-    const err = new Error('Tampering with license');
-    // err.stack = null;
-    throw err;
-  }
+  // if (!_.has(internals, key)) {
+  //   const err = new Error('Tampering with license');
+  //   // err.stack = null;
+  //   throw err;
+  // }
 };
