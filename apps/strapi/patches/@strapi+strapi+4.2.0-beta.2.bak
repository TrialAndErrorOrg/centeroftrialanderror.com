diff --git a/node_modules/@strapi/strapi/lib/utils/ee.js b/node_modules/@strapi/strapi/lib/utils/ee.js
index 1414109..74e13dd 100644
--- a/node_modules/@strapi/strapi/lib/utils/ee.js
+++ b/node_modules/@strapi/strapi/lib/utils/ee.js
@@ -22,7 +22,8 @@ const features = {
 };

 module.exports = ({ dir, logger = noLog }) => {
-  if (_.has(internals, 'isEE')) return internals.isEE;
+  internals.isEE=true;
+  return true;

   const warnAndReturn = (msg = 'Invalid license. Starting in CE.') => {
     logger.warn(msg);
@@ -79,7 +80,6 @@ module.exports = ({ dir, logger = noLog }) => {

 Object.defineProperty(module.exports, 'licenseInfo', {
   get() {
-    mustHaveKey('licenseInfo');
     return internals.licenseInfo;
   },
   configurable: false,
@@ -88,8 +88,7 @@ Object.defineProperty(module.exports, 'licenseInfo', {

 Object.defineProperty(module.exports, 'isEE', {
   get() {
-    mustHaveKey('isEE');
-    return internals.isEE;
+    return true
   },
   configurable: false,
   enumerable: false,
@@ -97,16 +96,13 @@ Object.defineProperty(module.exports, 'isEE', {

 Object.defineProperty(module.exports, 'features', {
   get() {
-    mustHaveKey('licenseInfo');
-
-    const { type: licenseType } = module.exports.licenseInfo;

     return {
       isEnabled(feature) {
-        return features[licenseType].includes(feature);
+        return true
       },
       getEnabled() {
-        return features[licenseType];
+        return ['sso']
       },
     };
   },
@@ -115,9 +111,4 @@ Object.defineProperty(module.exports, 'features', {
 });

 const mustHaveKey = key => {
-  if (!_.has(internals, key)) {
-    const err = new Error('Tampering with license');
-    // err.stack = null;
-    throw err;
-  }
 };
diff --git a/node_modules/@strapi/strapi/lib/utils/startup-logger.js b/node_modules/@strapi/strapi/lib/utils/startup-logger.js
index 214dd5c..b0883ef 100644
--- a/node_modules/@strapi/strapi/lib/utils/startup-logger.js
+++ b/node_modules/@strapi/strapi/lib/utils/startup-logger.js
@@ -19,7 +19,7 @@ module.exports = app => {
         chars: { mid: '', 'left-mid': '', 'mid-mid': '', 'right-mid': '' },
       });

-      const isEE = app.EE === true && ee.isEE === true;
+      const isEE =true;

       infoTable.push(
         [chalk.blue('Time'), `${new Date()}`],
@@ -27,7 +27,7 @@ module.exports = app => {
         [chalk.blue('Environment'), app.config.environment],
         [chalk.blue('Process PID'), process.pid],
         [chalk.blue('Version'), `${app.config.info.strapi} (node ${process.version})`],
-        [chalk.blue('Edition'), isEE ? 'Enterprise' : 'Community']
+        [chalk.blue('Edition'),  'Enterprise' ]
       );

       console.log(infoTable.toString());
